apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
data:
  # Argo CD's externally facing base URL. Required when configuring SSO
  # url: https://argocd.dsop.io
  url: null

  # Enables application status badge feature
  statusbadge.enabled: 'true'

  # Enables anonymous user access. The anonymous users get default role permissions specified argocd-rbac-cm.yaml.
  # users.anonymous.enabled: "false"
  users.anonymous.enabled: null

  # Enable plugins so `ksops` can be used to decrypt secrets
  kustomize.buildOptions: "--enable_alpha_plugins"

  repositories: |
    - url: ssh://git@gitlab.consulting.redhat.com:2222/navy-black-pearl/lighthouse-boostrap.git

  # Shared group credentials for repositories above to fallback on (based on path)
  repository.credentials: |
    - url: ssh://git@gitlab.consulting.redhat.com:2222/navy-black-pearl/
      sshPrivateKeySecret:
        name: redhat-consulting-gitlab
        key: sshPrivateKey

  # Custom tooling
  configManagementPlugins: |
    - name: env-kustomize
      generate:
        command: [sh, -c]
        args: ["kustomize build --enable_alpha_plugins . |& sed -e 's|$ENV|'$ENV'|g' -e 's|$ARGOCD_APP_SOURCE_TARGET_REVISION|'$ARGOCD_APP_SOURCE_TARGET_REVISION'|g'"]

  # In general, have ArgoCD ignore MutatingWebhook's caBundle, let the WH deal with this and keep ArgoCD ignorant
  resource.customizations: |
    admissionregistration.k8s.io/MutatingWebhookConfiguration:
      ignoreDifferences: |
        jsonPointers:
        - /webhooks/0/clientConfig/caBundle
    install.istio.io/IstioOperator:
      health.lua: |
        health_status = {}
        if obj.status ~= nil then
          if obj.status.status ~= nil then
            if obj.status.status == 0 or obj.status.status == "NONE" then
              health_status.status = "Unknown"
              health_status.message = "Component is not present."
              return health_status
            end
            if obj.status.status == 1 or obj.status.status == "UPDATING" then
              health_status.status = "Progressing"
              health_status.message = "Component is being updated to a different version."
              return health_status
            end
            if obj.status.status == 2 or obj.status.status == "RECONCILING" then
              health_status.status = "Progressing"
              health_status.message = "Controller has started but not yet completed reconciliation loop for the component."
              return health_status
            end
            if obj.status.status == 3 or obj.status.status == "HEALTHY" then
              health_status.status = "Healthy"
              health_status.message = "Component is healthy."
              return health_status
            end
            if obj.status.status == 4 or obj.status.status == "ERROR" then
              health_status.status = "Degraded"
              health_status.message = "Component is in an error state."
              return health_status
            end
          end
        end
        health_status.status = "Progressing"
        health_status.message = "Waiting for Istio Control Plane"
        return health_status
